---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: tenants.neurallog.io
spec:
  group: neurallog.io
  names:
    kind: Tenant
    listKind: TenantList
    plural: tenants
    singular: tenant
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Status
      type: string
    - jsonPath: .status.namespace
      name: Namespace
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: Tenant is the Schema for the tenants API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TenantSpec defines the desired state of a NeuralLog Tenant
            properties:
              description:
                description: Description provides additional information about the
                  tenant
                type: string
              displayName:
                description: DisplayName is a user-friendly name for the tenant
                type: string
              networkPolicy:
                description: NetworkPolicy defines the network policy configuration
                  for the tenant
                properties:
                  allowedNamespaces:
                    description: AllowedNamespaces is a list of namespaces that can
                      access the tenant
                    items:
                      type: string
                    type: array
                  egressRules:
                    description: EgressRules defines additional egress rules
                    items:
                      description: NetworkPolicyRule defines a network policy rule
                      properties:
                        description:
                          description: Description provides information about the rule
                          type: string
                        from:
                          additionalProperties:
                            type: string
                          description: From defines the source selector for ingress
                            rules
                          type: object
                        ports:
                          description: Ports defines the ports for the rule
                          items:
                            description: NetworkPolicyPort defines a port for a network
                              policy rule
                            properties:
                              port:
                                description: Port is the port number
                                format: int32
                                type: integer
                              protocol:
                                description: Protocol is the protocol for the port
                                type: string
                            type: object
                          type: array
                        to:
                          additionalProperties:
                            type: string
                          description: To defines the destination selector for egress
                            rules
                          type: object
                      type: object
                    type: array
                  enabled:
                    description: Enabled indicates whether network policies should
                      be created
                    type: boolean
                  ingressRules:
                    description: IngressRules defines additional ingress rules
                    items:
                      description: NetworkPolicyRule defines a network policy rule
                      properties:
                        description:
                          description: Description provides information about the rule
                          type: string
                        from:
                          additionalProperties:
                            type: string
                          description: From defines the source selector for ingress
                            rules
                          type: object
                        ports:
                          description: Ports defines the ports for the rule
                          items:
                            description: NetworkPolicyPort defines a port for a network
                              policy rule
                            properties:
                              port:
                                description: Port is the port number
                                format: int32
                                type: integer
                              protocol:
                                description: Protocol is the protocol for the port
                                type: string
                            type: object
                          type: array
                        to:
                          additionalProperties:
                            type: string
                          description: To defines the destination selector for egress
                            rules
                          type: object
                      type: object
                    type: array
                type: object
              redis:
                description: Redis defines the configuration for the Redis instance
                properties:
                  config:
                    additionalProperties:
                      type: string
                    description: Config defines additional Redis configuration
                    type: object
                  image:
                    description: Image is the Docker image for Redis
                    type: string
                  replicas:
                    description: Replicas is the number of Redis instances (for Redis
                      Sentinel)
                    format: int32
                    type: integer
                  resources:
                    description: Resources defines the resource limits and requests
                      for Redis
                    properties:
                      cpu:
                        description: CPU defines the CPU limits and requests
                        properties:
                          limit:
                            description: Limit is the maximum amount of the resource
                            type: string
                          request:
                            description: Request is the minimum amount of the resource
                            type: string
                        type: object
                      memory:
                        description: Memory defines the memory limits and requests
                        properties:
                          limit:
                            description: Limit is the maximum amount of the resource
                            type: string
                          request:
                            description: Request is the minimum amount of the resource
                            type: string
                        type: object
                      storage:
                        description: Storage defines the storage limits and requests
                        properties:
                          limit:
                            description: Limit is the maximum amount of the resource
                            type: string
                          request:
                            description: Request is the minimum amount of the resource
                            type: string
                        type: object
                    type: object
                  storage:
                    description: Storage defines the storage configuration for Redis
                    type: string
                type: object
              resources:
                description: Resources defines the resource limits and requests for
                  the tenant
                properties:
                  cpu:
                    description: CPU defines the CPU limits and requests
                    properties:
                      limit:
                        description: Limit is the maximum amount of the resource
                        type: string
                      request:
                        description: Request is the minimum amount of the resource
                        type: string
                    type: object
                  memory:
                    description: Memory defines the memory limits and requests
                    properties:
                      limit:
                        description: Limit is the maximum amount of the resource
                        type: string
                      request:
                        description: Request is the minimum amount of the resource
                        type: string
                    type: object
                  storage:
                    description: Storage defines the storage limits and requests
                    properties:
                      limit:
                        description: Limit is the maximum amount of the resource
                        type: string
                      request:
                        description: Request is the minimum amount of the resource
                        type: string
                    type: object
                type: object
              server:
                description: Server defines the configuration for the NeuralLog server
                properties:
                  env:
                    description: Env defines additional environment variables for the
                      server
                    items:
                      description: EnvVar defines an environment variable
                      properties:
                        name:
                          description: Name is the name of the environment variable
                          type: string
                        value:
                          description: Value is the value of the environment variable
                          type: string
                        valueFrom:
                          description: ValueFrom defines a source for the environment
                            variable value
                          properties:
                            configMapKeyRef:
                              description: ConfigMapKeyRef references a key in a ConfigMap
                              properties:
                                key:
                                  description: Key is the key in the ConfigMap
                                  type: string
                                name:
                                  description: Name is the name of the ConfigMap
                                  type: string
                                optional:
                                  description: Optional indicates whether the ConfigMap
                                    or key must exist
                                  type: boolean
                              required:
                              - key
                              - name
                              type: object
                            secretKeyRef:
                              description: SecretKeyRef references a key in a Secret
                              properties:
                                key:
                                  description: Key is the key in the Secret
                                  type: string
                                name:
                                  description: Name is the name of the Secret
                                  type: string
                                optional:
                                  description: Optional indicates whether the Secret
                                    or key must exist
                                  type: boolean
                              required:
                              - key
                              - name
                              type: object
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  image:
                    description: Image is the Docker image for the server
                    type: string
                  replicas:
                    description: Replicas is the number of server instances
                    format: int32
                    type: integer
                  resources:
                    description: Resources defines the resource limits and requests
                      for the server
                    properties:
                      cpu:
                        description: CPU defines the CPU limits and requests
                        properties:
                          limit:
                            description: Limit is the maximum amount of the resource
                            type: string
                          request:
                            description: Request is the minimum amount of the resource
                            type: string
                        type: object
                      memory:
                        description: Memory defines the memory limits and requests
                        properties:
                          limit:
                            description: Limit is the maximum amount of the resource
                            type: string
                          request:
                            description: Request is the minimum amount of the resource
                            type: string
                        type: object
                      storage:
                        description: Storage defines the storage limits and requests
                        properties:
                          limit:
                            description: Limit is the maximum amount of the resource
                            type: string
                          request:
                            description: Request is the minimum amount of the resource
                            type: string
                        type: object
                    type: object
                type: object
            type: object
          status:
            description: TenantStatus defines the observed state of a NeuralLog Tenant
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of the tenant's state
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              namespace:
                description: Namespace is the namespace created for the tenant
                type: string
              phase:
                description: Phase represents the current phase of the tenant
                type: string
              redisStatus:
                description: RedisStatus represents the status of the Redis deployment
                properties:
                  message:
                    description: Message provides additional information about the
                      component status
                    type: string
                  phase:
                    description: Phase represents the current phase of the component
                    type: string
                  readyReplicas:
                    description: ReadyReplicas is the number of ready replicas
                    format: int32
                    type: integer
                  totalReplicas:
                    description: TotalReplicas is the total number of replicas
                    format: int32
                    type: integer
                type: object
              serverStatus:
                description: ServerStatus represents the status of the server deployment
                properties:
                  message:
                    description: Message provides additional information about the
                      component status
                    type: string
                  phase:
                    description: Phase represents the current phase of the component
                    type: string
                  readyReplicas:
                    description: ReadyReplicas is the number of ready replicas
                    format: int32
                    type: integer
                  totalReplicas:
                    description: TotalReplicas is the total number of replicas
                    format: int32
                    type: integer
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
